@{
	ViewData["Title"] = "Jobs";
}

<div id="message">
	@if (TempData["message"] != null && TempData["message"].ToString()!.Length > 0)
	{
		<div class="alert @TempData["messageType"]">
			@TempData["message"]
			<button class="btn-close" onclick="document.getElementById('message').innerHTML=''"></button>
		</div>
	}
</div>

<script>
	function deleteJob(id) {
		if (confirm("Are you sure you want to delete?")) {
			location.href = "Delete?id=" + id;
		}
	}
</script>
<a href="/Admin/AddJob" class="btn btn-primary">Add Job</a>

<button class="btn btn-primary" data-bs-toggle="collapse" data-bs-target="#filters">Filters</button>

<form method="get">
	<div class="collapse" id="filters">
		<div class="row mb-3">
			<label class="col-sm-2 col-form-label">Category</label>
			<div class="col-sm-4">
				<select class="form-control" name="filterCategory" id="filterCategory">
					<option value="" selected disabled>Select Category</option>
				</select>
			</div>
		</div>
		<div class="row mb-3">
			<label class="col-sm-2 col-form-label">Sub-Category</label>
			<div class="col-sm-4">
				<select class="form-control" name="filterSubcategory" id="filterSubcategory">
					<option value="" selected disabled>Select Sub-Category</option>
				</select>
			</div>
		</div>
		<div class="row mb-3">
			<label class="col-sm-2 col-form-label">Minimum Salary</label>
			<div class="col-sm-4">
				<input type="number" min="0" class="form-control" name="filterSalary" id="filterSalary" />
			</div>
		</div>
		<div>
			<button type="submit" class="btn btn-primary">Apply</button>
		</div>
	</div>
</form>
<br />

<table class="table">
	<thead>
		<tr>
			<th>ID</th>
			<th>Name</th>
			<th>Category</th>
			<th>Sub-category</th>
			<th>Salary</th>
			<th>Deadline</th>
			<th>Company name</th>
			<th>Edit</th>
			<th>Delete</th>
		</tr>
	</thead>
	<tbody>
		@{
			JobModel? editJob = null;
		}
		@foreach (var job in (List<JobModel>)ViewData["jobs"])
		{
			@if (ViewData["editID"] != null && (int)ViewData["editID"]! == job.Id)
			{
				editJob = job;
				<form method="post" action="Edit">
				<tr>
					<td><input type="hidden" name="id" value="@job.Id" />@job.Id</td>
					<td><input name="name" value="@job.Name"></td>
					<td>
						<select class="form-control" name="category" id="category" required>
							<option value="" selected disabled>Select Category</option>
						</select>
					</td>
					<td>
						<select class="form-control" name="subcategory" id="subcategory" required>
							<option value="" selected disabled>Select Sub-Category</option>
						</select>
					</td>
					<td><input name="salary" value="@job.Salary"></td>
					<td><input type="date" name="deadline" value="@job.DeadLine.ToString("yyyy-MM-dd")"></td>
					<td><input name="CompanyName" value="@job.CompanyName"></td>

					<td><button class="btn btn-primary" type="submit">Update</button></td>
					<td><a class="btn btn-danger" href="Jobs">Cancel</a></td>
				</tr>
				</form>
			}

			else
			{
				<tr>
					<td>@job.Id</td>
					<td>@job.Name</td>
					<td>@job.Category</td>
					<td>@job.SubCategory</td>
					<td>@job.Salary</td>
					<td>@job.DeadLine.ToString("yyyy-dd-MM")</td>
					<td>@job.CompanyName</td>

					<td><a class="btn btn-primary" href="Jobs?editid=@job.Id">Edit</a></td>
					<td><button class="btn btn-danger" onclick="deleteJob(@job.Id)">Delete</button></td>
				</tr>
			}
		}
	</tbody>
</table>

<script src="~/js/categories.js"></script>

<script>
	var categoryObject = @Html.Raw(Json.Serialize(ViewBag.categories));
	var categorySel = document.getElementById("filterCategory");
	var subcategorySel = document.getElementById("filterSubcategory");
	initCategories(categorySel, subcategorySel);

	categorySel.value = "@ViewData["filterCategory"]";
	categorySel.onchange(); // call forcibly, otherwise the values aren't loaded
	subcategorySel.value = "@ViewData["filterSubcategory"]";
	document.getElementById("filterSalary").value = @ViewData["filterSalary"];
</script>

@if (editJob != null)
{
	<script>
		var categorySel = document.getElementById("category");
		var subcategorySel = document.getElementById("subcategory");

		initCategories(categorySel, subcategorySel);

		categorySel.value = "@editJob.Category";
		categorySel.onchange(); // call forcibly, otherwise the values aren't loaded
		subcategorySel.value = "@editJob.SubCategory";
	</script>
}
